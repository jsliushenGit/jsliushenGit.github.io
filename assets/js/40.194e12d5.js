(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{424:function(s,a,t){"use strict";t.r(a);var l=t(16),n=Object(l.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"合并两个有序链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并两个有序链表"}},[s._v("#")]),s._v(" 合并两个有序链表")]),s._v(" "),t("p",[s._v("将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。")]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("输入："),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("\n输出："),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("->"),t("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("\n")])])]),t("h2",{attrs:{id:"解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决"}},[s._v("#")]),s._v(" 解决")]),s._v(" "),t("p",[s._v("解法一")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-comment"},[s._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/**\n * "),t("span",{staticClass:"hljs-doctag"},[s._v("@param "),t("span",{staticClass:"hljs-type"},[s._v("{ListNode}")]),s._v(" "),t("span",{staticClass:"hljs-variable"},[s._v("l1")])]),s._v("\n * "),t("span",{staticClass:"hljs-doctag"},[s._v("@param "),t("span",{staticClass:"hljs-type"},[s._v("{ListNode}")]),s._v(" "),t("span",{staticClass:"hljs-variable"},[s._v("l2")])]),s._v("\n * "),t("span",{staticClass:"hljs-doctag"},[s._v("@return "),t("span",{staticClass:"hljs-type"},[s._v("{ListNode}")])]),s._v("\n */")]),s._v("\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" mergeTwoLists = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("l1, l2")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (l1 == "),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(") {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" l2;\n  }\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (l2 == "),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(") {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" l1;\n  }\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (l1.val <= l2.val) {\n    l1.next = mergeTwoLists(l1.next, l2);\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" l1;\n  } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n    l2.next = mergeTwoLists(l1, l2.next);\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" l2;\n  }\n};\n")])])]),t("p",[s._v("解法二")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-comment"},[s._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/**\n * "),t("span",{staticClass:"hljs-doctag"},[s._v("@param "),t("span",{staticClass:"hljs-type"},[s._v("{ListNode}")]),s._v(" "),t("span",{staticClass:"hljs-variable"},[s._v("l1")])]),s._v("\n * "),t("span",{staticClass:"hljs-doctag"},[s._v("@param "),t("span",{staticClass:"hljs-type"},[s._v("{ListNode}")]),s._v(" "),t("span",{staticClass:"hljs-variable"},[s._v("l2")])]),s._v("\n * "),t("span",{staticClass:"hljs-doctag"},[s._v("@return "),t("span",{staticClass:"hljs-type"},[s._v("{ListNode}")])]),s._v("\n */")]),s._v("\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" mergeTwoLists = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("l1, l2")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" prevHead = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" ListNode("),t("span",{staticClass:"hljs-number"},[s._v("-1")]),s._v(");\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" prevNode = prevHead;\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v(" (l1 != "),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(" && l2 != "),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(") {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (l1.val <= l2.val) {\n      prevNode.next = l1;\n      l1 = l1.next\n    } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n      prevNode.next = l2;\n      l2 = l2.next;\n    }\n    prevNode = prevNode.next;\n  }\n  prevNode.next = l1 ? l1 : l2;\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" prevHead.next\n};\n")])])]),t("h2",{attrs:{id:"性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[s._v("#")]),s._v(" 性能")]),s._v(" "),t("p",[s._v("Accepted")]),s._v(" "),t("ul",[t("li",[s._v("208/208 cases passed (72 ms)")]),s._v(" "),t("li",[s._v("Your runtime beats 80.46 % of javascript submissions")]),s._v(" "),t("li",[s._v("Your memory usage beats 58.61 % of javascript submissions (35.5 MB)")])])])}),[],!1,null,null,null);a.default=n.exports}}]);