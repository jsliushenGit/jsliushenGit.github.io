(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{387:function(s,a,t){"use strict";t.r(a);var n=t(16),l=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("title: javascript再出发：模拟bind的实现\nauthor: jsliushen\ntags:")]),s._v(" "),t("ul",[t("li",[s._v("javascript\ncategories:")]),s._v(" "),t("li",[s._v("technology\ndate: 2017-11-05 23:47:00")])]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("bind方法的定义是：")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("bind()方法创建一个新的函数, 当被调用时，将其"),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v("关键字设置为提供的值，\n在调用新函数时，在任何提供之前提供一个给定的参数序列。\n")])])]),t("p",[s._v("简单来说，bind方法会给一个函数指定this，然后返回一个新的函数，这个函数和原函数在传递参数和返回值上没有区别。举个栗子：")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("\t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" a = "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n   \t  "),t("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("\n    }\n    "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("fun")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("name,age")]),s._v(")")]),s._v("{\n   \t   "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".a);\n       "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {\n       \t   "),t("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": name,\n           "),t("span",{staticClass:"hljs-attr"},[s._v("age")]),s._v(": age\n       }\n    }\n   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" fun1 = fun.bind(obj);\n   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" result = fun1("),t("span",{staticClass:"hljs-string"},[s._v('"zhangsan"')]),s._v(","),t("span",{staticClass:"hljs-number"},[s._v("18")]),s._v("); "),t("span",{staticClass:"hljs-comment"},[s._v('//打印2，返回{name:"zhangsan",age:18}')]),s._v("\n   "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(result);  "),t("span",{staticClass:"hljs-comment"},[s._v('//打印{name:"zhangsan",age:18}')]),s._v("\n")])])]),t("p",[s._v("总结一下：")]),s._v(" "),t("ul",[t("li",[s._v("返回一个新的函数")]),s._v(" "),t("li",[s._v("this指向bind的第一个参数")]),s._v(" "),t("li",[s._v("新函数其他的参数照常传递")]),s._v(" "),t("li",[s._v("新函数能有返回值")]),s._v(" "),t("li",[s._v("下面我们就根据上面的特点，一步一步来模拟实现bind")])]),s._v(" "),t("h2",{attrs:{id:"下面我们就根据上面的特点，一步一步来模拟实现bind。还是以上面的函数fun和对象obj为例：第一版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下面我们就根据上面的特点，一步一步来模拟实现bind。还是以上面的函数fun和对象obj为例：第一版"}},[s._v("#")]),s._v(" 下面我们就根据上面的特点，一步一步来模拟实现bind。还是以上面的函数fun和对象obj为例：\n第一版")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("\t"),t("span",{staticClass:"hljs-built_in"},[s._v("Function")]),s._v(".prototype.myBind="),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("context")]),s._v(")")]),s._v("{\n    \t"),t("span",{staticClass:"hljs-comment"},[s._v("//首先获取函数fun,这里是this，也就是调用myBind的函数")]),s._v("\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" self = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(";   "),t("span",{staticClass:"hljs-comment"},[s._v("//先把this保存起来，防止改变")]),s._v("\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n        \tself.apply(context);\n        }\n    }\n")])])]),t("p",[s._v("测试一下:")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("\t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" fun1 = fun.myBind(obj);\n\tfun1();   "),t("span",{staticClass:"hljs-comment"},[s._v("//打印2")]),s._v("\n")])])]),t("h2",{attrs:{id:"第二版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二版"}},[s._v("#")]),s._v(" 第二版")]),s._v(" "),t("p",[s._v("再来解决传参数和返回值的问题，参数是不固定的，但是我们有arguments对象，对  "),t("code",[s._v("arguments")]),s._v(" 对象不熟悉的可以另外查资料学习，这里就不展开啦，当然我后续会写关于arguments的文章。")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("\t"),t("span",{staticClass:"hljs-built_in"},[s._v("Function")]),s._v(".prototype.myBind = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("context")]),s._v(") ")]),s._v("{\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" self = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(";\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n           "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" self.apply(context, "),t("span",{staticClass:"hljs-built_in"},[s._v("arguments")]),s._v(")\n        }\n    }\n")])])]),t("p",[s._v("调用试试：")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" fun1 = fun.myBind(obj);\n   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" result = fun1("),t("span",{staticClass:"hljs-string"},[s._v('"zhangsan"')]),s._v(","),t("span",{staticClass:"hljs-number"},[s._v("18")]),s._v(")  "),t("span",{staticClass:"hljs-comment"},[s._v('//打印2，返回{name:"zhangsan",age:18}')]),s._v("\n   "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(result);  "),t("span",{staticClass:"hljs-comment"},[s._v('//打印{name:"zhangsan",age:18}')]),s._v("\n")])])]),t("p",[s._v("到这里，我们已经实现了上面总结的四个特点，感觉已经可以收工了。但是bind函数还有几个特别不常用的用法，简直是令人发指。看代码：")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("\t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" a = "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n   \t"),t("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("\n   }\n   "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("fun")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("name,age")]),s._v(")")]),s._v("{\n   \t"),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".a);\n       "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {\n       \t"),t("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": name,\n           "),t("span",{staticClass:"hljs-attr"},[s._v("age")]),s._v(": age\n       }\n   }\n   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" fun1 = fun.bind(obj,"),t("span",{staticClass:"hljs-string"},[s._v('"zhangsan"')]),s._v(");\n   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" result = fun1("),t("span",{staticClass:"hljs-number"},[s._v("18")]),s._v("); "),t("span",{staticClass:"hljs-comment"},[s._v('//打印2，返回{name:"zhangsan",age:18}')]),s._v("\n   "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(result);  "),t("span",{staticClass:"hljs-comment"},[s._v('//打印{name:"zhangsan",age:18}')]),s._v("\n")])])]),t("p",[s._v("what？对，你没看错，函数在调用bind方法的时候，除了传一个参数指定this，还可以传另外的参数，而且这些参数还可以不传完，剩下的等到调用返回的新函数时再传。这就尴尬了，我们来分析一下，怎样可以把参数存起来。我们在第一二版代码中都是在调用myBind函数的时候返回了一个新的函数，而且这个新的函数还访问了myBind中的变量self，这是一个很明显的闭包。变量self并不会被垃圾回收，我们可以利用闭包的这个特性，再在myBind中声明一个变量保存调用myBind时传递的参数，然后等调用新函数时，把新传入的参数和这个暂存的参数合并。来看代码：")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("\t"),t("span",{staticClass:"hljs-built_in"},[s._v("Function")]),s._v(".prototype.myBind = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("context")]),s._v(") ")]),s._v("{\n       "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" self = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(";\n       "),t("span",{staticClass:"hljs-comment"},[s._v("//第一个参数用来指定this，这里要获取的是除了第一个参数之外的所有参数,利用slice方法截取arguments对象，从第二个参数开始截取")]),s._v("\n       "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" args = "),t("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".prototype.slice.call("),t("span",{staticClass:"hljs-built_in"},[s._v("arguments")]),s._v(","),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(");\n       "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n       \t"),t("span",{staticClass:"hljs-comment"},[s._v("//调用返回的方法时会传入新的参数，这时候需要把新传入的参数和上面的args合并，利用数组的concat方法,需要先把arguments对象转化成数组")]),s._v("\n          "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" newArgs="),t("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".prototype.slice.call("),t("span",{staticClass:"hljs-built_in"},[s._v("arguments")]),s._v(");\n          "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" self.apply(context, newArgs.concat(args))\n       }\n   }\n")])])]),t("p",[s._v("测试一下：")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" fun1 = fun.myBind(obj,"),t("span",{staticClass:"hljs-string"},[s._v('"zhangsan"')]),s._v(");\n   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" result = fun1("),t("span",{staticClass:"hljs-number"},[s._v("18")]),s._v("); "),t("span",{staticClass:"hljs-comment"},[s._v('//打印2，返回{name:"zhangsan",age:18}')]),s._v("\n   "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(result);  "),t("span",{staticClass:"hljs-comment"},[s._v('//打印{name:"zhangsan",age:18}')]),s._v("\n")])])]),t("h2",{attrs:{id:"搞定！上面我们在把arguments转化成数组时也可以使用es6的-当作构造函数使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搞定！上面我们在把arguments转化成数组时也可以使用es6的-当作构造函数使用"}},[s._v("#")]),s._v(" 搞定！上面我们在把arguments转化成数组时也可以使用ES6的...\n当作构造函数使用")]),s._v(" "),t("p",[s._v("大家以为这样就完了？太天真了，bind函数还有个不推荐的用法，虽然不推荐，但是还是可以用，来看代码")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("\t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" a = "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n        "),t("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("\n    }\n\n    "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("fun")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("name, age")]),s._v(") ")]),s._v("{\n        "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".a);\n        "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(name);\n        "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(age);\n    }\n    fun.prototype.a = "),t("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(";\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" fun1 = fun.bind(obj);\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" result = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" fun1("),t("span",{staticClass:"hljs-string"},[s._v('"zhangsan"')]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("18")]),s._v(");  "),t("span",{staticClass:"hljs-comment"},[s._v("//打印3,zhangsan,18")]),s._v("\n    "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(result)   "),t("span",{staticClass:"hljs-comment"},[s._v("//打印{}")]),s._v("\n")])])]),t("p",[s._v("上面的代码，fun1是fun调用bind函数之后返回的新函数，这时候fun1中的this应该指向obj，但是我们把fun1当作构造函数调用。当函数被当作构造函数调用时，函数内部的this应该指向实例对象。这里同时有两个规则应用于this，一个是通过bind指定的obj，一个是通过构造函数调用指定的实例对象，那么最终this究竟指向什么，大家看结果最终打印的是3，很明显获胜的是后者。这时候通过bind指定的this被覆盖了，这种情况很少见，也不推荐使用，这里我们就不分析了，直接贴出代码：")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",[t("code",{staticClass:"language-javascript"},[s._v("\t"),t("span",{staticClass:"hljs-built_in"},[s._v("Function")]),s._v(".prototype.myBind = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("context")]),s._v(") ")]),s._v("{\n    \t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" self = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(";\n    \t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" args = "),t("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".prototype.slice.call("),t("span",{staticClass:"hljs-built_in"},[s._v("arguments")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(");\n\n    \t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" F = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n        \t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" newArgs = "),t("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".prototype.slice.call("),t("span",{staticClass:"hljs-built_in"},[s._v("arguments")]),s._v(");\n        \t"),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" self.apply("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("instanceof")]),s._v(" F ? "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(" : context, args.concat(newArgs));\n    }\n    F.prototype = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".prototype;\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" F;\n}\n")])])])])}),[],!1,null,null,null);a.default=l.exports}}]);