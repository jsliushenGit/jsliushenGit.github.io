(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{401:function(s,a,t){"use strict";t.r(a);var n=t(16),l=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("迭代器模式是指提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象的内部表示。迭代器模式可以把迭代的过程从业务逻辑中分离出来,在使用迭代器模式之后，即使不关心对象的内部构造，也可以按顺序访问其中的每个元素。")])]),s._v(" "),t("h2",{attrs:{id:"实现自己的迭代器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现自己的迭代器"}},[s._v("#")]),s._v(" 实现自己的迭代器")]),s._v(" "),t("div",{staticClass:"language-JavaScript extra-class"},[t("pre",[t("code",{staticClass:"language-JavaScript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" each = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("ary, callback")]),s._v(") ")]),s._v("{\n\t"),t("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" i = "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", l = ary.length; i < "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("; i++) {\n\t\tcallback(ary[i], i, ary[i])\n\t}\n}\n\neach(["),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("], "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("i, n")]),s._v(") ")]),s._v("{\n\talert([i, n])\n})\n")])])]),t("h2",{attrs:{id:"内部迭代器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部迭代器"}},[s._v("#")]),s._v(" 内部迭代器")]),s._v(" "),t("p",[s._v("在函数内部已经定义好了迭代规则的迭代器称为内部迭代器，函数内部完全接手了整个迭代过程，外部只需要一次初始调用。"),t("br"),s._v("\n上面我们编写的each函数就属于内部迭代器。")]),s._v(" "),t("h2",{attrs:{id:"外部迭代器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外部迭代器"}},[s._v("#")]),s._v(" 外部迭代器")]),s._v(" "),t("p",[s._v("外部迭代器必须显示地请求迭代下一个元素。"),t("br"),s._v("\n外部迭代器增加了一些调用复杂度，但是也相对增强了迭代器的灵活性，可以手工控制迭代的过程或者顺序。")]),s._v(" "),t("div",{staticClass:"language-JavaScript extra-class"},[t("pre",[t("code",{staticClass:"language-JavaScript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" Iterator = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("obj")]),s._v(") ")]),s._v("{ \n  "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" current = "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" next = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{ \n    current += "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n  };\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" isDone = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" current >= obj.length;\n  };\n\t"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" getCurrItem = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{ \n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" obj[current];\n  };\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {\n    "),t("span",{staticClass:"hljs-attr"},[s._v("next")]),s._v(": next,\n    "),t("span",{staticClass:"hljs-attr"},[s._v("isDone")]),s._v(": isDone,\n    "),t("span",{staticClass:"hljs-attr"},[s._v("getCurrItem")]),s._v(": getCurrItem \n  };\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" compare = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("iterator1, iterator2")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v("(!iterator1.isDone() && !iterator2.isDone()){\n\t\t"),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (iterator1.getCurrItem() !== iterator2.getCurrItem()){ \n\t\t\t"),t("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("Error")]),s._v(" ("),t("span",{staticClass:"hljs-string"},[s._v("'iterator1 和 iterator2 不相等'")]),s._v(")\n\t\t} \n    iterator1.next()\n    iterator2.next()\n\t}\n\talert ("),t("span",{staticClass:"hljs-string"},[s._v("'iterator1 和 iterator2 相等'")]),s._v(")\n}\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" iterator1 = Iterator([ "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(" ]);\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" iterator2 = Iterator([ "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(" ]);\ncompare( iterator1, iterator2 ); "),t("span",{staticClass:"hljs-comment"},[s._v("// 输出:iterator1 和 iterator2 相等")]),s._v("\n")])])]),t("h2",{attrs:{id:"迭代数组和对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代数组和对象"}},[s._v("#")]),s._v(" 迭代数组和对象")]),s._v(" "),t("p",[s._v("迭代器模式不仅可以迭代数组，还可以迭代一些类数组的对象。"),t("br"),s._v("\n无论是内部迭代器还是外部迭代器，只要被迭代的聚合对象拥有length属性而且可以用下标访问，那它就可以被迭代。")]),s._v(" "),t("h2",{attrs:{id:"倒序迭代器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#倒序迭代器"}},[s._v("#")]),s._v(" 倒序迭代器")]),s._v(" "),t("div",{staticClass:"language-JavaScript extra-class"},[t("pre",[t("code",{staticClass:"language-JavaScript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" reverseEach = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("ary, callback")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" l = ary.length - "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("; l >= "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("; l--) {\n\t\tcallback(l, ary[l])\n\t}\n}\n\nreverseEach(["),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("], "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("i, n")]),s._v(") ")]),s._v("{ \n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(n); "),t("span",{staticClass:"hljs-comment"},[s._v("// 分别输出:2, 1, 0")]),s._v("\n});\n")])])]),t("h2",{attrs:{id:"中止迭代器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中止迭代器"}},[s._v("#")]),s._v(" 中止迭代器")]),s._v(" "),t("div",{staticClass:"language-JavaScript extra-class"},[t("pre",[t("code",{staticClass:"language-JavaScript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" each = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("ary, callback")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" i = "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", l = ary.length; i < l; i++) {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (callback(i, ary[i]) === "),t("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(") { \n      "),t("span",{staticClass:"hljs-keyword"},[s._v("break")]),s._v(";\n    } \n  }\n};\neach(["),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", "),t("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("], "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("i, n")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (n > "),t("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("){ \n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(";\n  }\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(n);  "),t("span",{staticClass:"hljs-comment"},[s._v("// 分别输出1, 2, 3")]),s._v("\n});\n")])])]),t("h2",{attrs:{id:"心得体会"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#心得体会"}},[s._v("#")]),s._v(" 心得体会")]),s._v(" "),t("p",[s._v("JavaScript中已经内置了迭代器，比如forEach。es6中的Iterator就是一个标准的迭代器模式实现，使用生成器Generator可以快速生成一个迭代器。本章主要是学习迭代器模式的思想，实际用途不大。")])])}),[],!1,null,null,null);a.default=l.exports}}]);